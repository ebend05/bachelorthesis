#-------------------------------------------------------------------------------------------------------------------  
BMatrix <- BMatrix("20180713_Reisezeitmatrix_gesamt.csv")
  BMatrix

Pmatrix_B005 <- Pmatrix(BMatrix_B005)
Pmatrix_i <- Pmatrix(BMatrix)
Pmatrix_1 <- Pmatrix(BMatrix)
Pmatrix_2 <- Pmatrix(BMatrix)
  Pmatrix_B005  
  Pmatrix_i
  Pmatrix_1
  Pmatrix_2
  
plotTest_B005 <- Diff(Pmatrix_B005)
plotTest_i <- Diff(Pmatrix_i)
plotTest_1 <- Diff(Pmatrix_1)
plotTest_2 <- Diff(Pmatrix_2)
  plot(plotTest_B005)
  plot(plotTest_i)
  plot(plotTest_1)
  plot(plotTest_2)
#-------------------------------------------------------------------------------------------------------------------  
#-------------------------------------------------------------------------------------------------------------------  
BMatrix <- function(timeCSV){ #, Praxis

  Time <- read.csv(file=timeCSV, header=TRUE, sep=",", check.names = FALSE)
  Time$Bezeichner <- NULL # last column is NULL 
  #print("Bezeichnerzeile gelöscht")
  Time <- na.omit(Time) # ignore NAs
  #-------------------------------------------------------------------------------------------------------------------
  modelTime=c()
  realTime <- c()
  # # traverse the B-Matrix row-wise
  for (i in 1:nrow(Time)){      # extract all columns of the ith row  
    realTime[i] <- 1
    modelTime[i]= (min(as.double(Time[i,],na.rm = TRUE))) # find the minimum value in the same row
  }
  #-------------------------------------------------------------------------------------------------------------------
  # save realTime as matrix
  realTime = matrix(realTime, ncol=1) 
  # save modelTime as matrix
  modelTime = matrix(modelTime, ncol=1) 
  #-------------------------------------------------------------------------------------------------------------------  
  # B-Matrix for the doctor's office with realTime and modelTime 
  BMatrix = (cbind(realTime,modelTime))
  # name of the B-Matrix columns
  dimnames(BMatrix) = list(
    c(),                        # row names (list of patients)
    c("realTime", "modelTime")  # column names
  )
  print("es gibt B")
  return(BMatrix)
}
#-------------------------------------------------------------------------------------------------------------------  
#-------------------------------------------------------------------------------------------------------------------  
Pmatrix <- function(currentBMatrix){
  
  #Time <- read.csv(file="20180713_Reisezeitmatrix_gesamt.csv", header=TRUE, sep=",", check.names = FALSE) 
  alpha <- 1
  beta=seq(0,2, by=0.5)
  Aj <- 1 
  
  testP <- array(0, 
                 dim = c(nrow(currentBMatrix), 4, length(beta)), 
                 dimnames = list(c(1:nrow(currentBMatrix)), 
                                 c("numerator", "denominator", "Pmodel", "Pdiff"), 
                                 c( (paste("beta", sep = "_", beta ))) 
                 )
  )
  numerator <- 0
  denominator <- 0
  
  for (k in 1:length(beta)){
    for(i in 1:nrow(currentBMatrix)) {  
      numerator <- (Aj^alpha * exp(-(as.double(currentBMatrix[i,2])*beta[k])))   
   
      for (j in 1:ncol(Time[i,])){
        denominator <- (Aj^alpha * exp(-(as.double(Time[i,j])*beta[k])) + denominator) 
       }
      # print(numerator)
      # print(denominator)
      # print(i)
 
      testP[i,1,k] <- numerator
      testP[i,2,k] <- denominator
      testP[i,3,k] <- (numerator / denominator)
      testP[i,4,k] <- abs(1-testP[i,3,k])
      
      numerator <- 0
      denominator <- 0
    }
    
    #print("außerhalb der Schleife")
    print(k)
    
  }
  return(testP)
}
#-------------------------------------------------------------------------------------------------------------------  
#-------------------------------------------------------------------------------------------------------------------  
Diff <- function(P){
  
  difference <- c()
  for (i in 1:ncol(P[,4,])){      # extract all columns of the ith row  
    difference[i] <- mean(P[,4,i])
    print(difference[i])
  }
  return(difference)
}
  